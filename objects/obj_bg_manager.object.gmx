<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Grid initializer
scroll = false;

vpoint_x = 2*view_wview/3;
vpoint_y = view_hview/4;

horizon_y = 3*view_hview/4 + 32;

num_fences = floor(2*view_wview / sprite_get_width(spr_fence));
fence_width = num_fences * sprite_get_width(spr_fence);
num_rungs = 6;

shadow_color = make_color_rgb(140, 117, 140);
shadow_pt_left = 0;
shadow_pt_right = 5;

x_offset = -view_wview/2;
ref_point = 0;

scroll_base_speed = 1000;
scroll_speed_max = 10;
scroll_speed_set = scroll_speed_max;
scroll_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Parallax initializer
parallax[0] = 0;

for (var i = 0; background_visible[i]; i++) {
    parallax[i] = background_x[i] / 100;
    background_x[i] = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scroll_speed_max = scroll_speed_set;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>scr_alarm_manager</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (scroll and !global.pause) {
    scroll_speed = (global.spd / 100) * lerp(scroll_speed, scroll_speed_max, 0.05);
    ref_point = (ref_point + scroll_speed) % fence_width;
}

for (var i = 0; background_visible[i]; i++) {
    if (!global.pause) {
        background_hspeed[i] = parallax[i] * scroll_speed;
    } else {
        background_hspeed[i] = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(shadow_color);
draw_set_alpha(0.75);
//draw fence
for (var i = 0; i &lt; num_fences; i++) {
    var x_coord = ((fence_width-ref_point+(i * sprite_get_width(spr_fence))) % fence_width) + x_offset;
    draw_sprite(spr_fence, 0, x_coord, 2*view_hview/3);
    
    //draw vertical shadows
    for (var j = 0; j &lt; num_rungs; j++) {
        var rung_offset = j * 36;
        draw_triangle(x_coord + shadow_pt_left + rung_offset, 2*view_hview/3+sprite_get_height(spr_fence),
                      x_coord + shadow_pt_right + rung_offset, 2*view_hview/3+sprite_get_height(spr_fence),
                      scr_get_bottom_pt(x_coord + shadow_pt_left + rung_offset, horizon_y), view_hview, false);
                      
        draw_triangle(scr_get_bottom_pt(x_coord + shadow_pt_left + rung_offset, horizon_y), view_hview,
                      scr_get_bottom_pt(x_coord + shadow_pt_right + rung_offset, horizon_y), view_hview,
                      x_coord + shadow_pt_right + rung_offset, 2*view_hview/3+sprite_get_height(spr_fence), false);             
    }
}

//draw horizontal shadows
draw_rectangle(0, 2*view_hview/3+sprite_get_height(spr_fence) + 32,
               view_wview, 2*view_hview/3+sprite_get_height(spr_fence) + 39, false);
               
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
