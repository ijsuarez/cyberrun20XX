<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_cycle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>grounded = false;
jump_two = true;
jump_angle = 45;
base_height = abs(y - obj_ground.y);
height_diff = base_height - abs(y - obj_ground.y);

grav = 0.7;
jumpspeed = 25;
vsp = 0;

can_act = false;
key_jump = false;
invincible = false;

has_started = false;

global.player_xpos = x;
global.player_ypos = y;

pod = instance_create(x + 200, y - 100, obj_pod_player);
with (pod) {
    xhome = other.x + 200;
    yhome = other.y - 100;
}

image_speed = 0;
hit = false;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Particle Effects
global.cycle_psystem = part_system_create();
part_system_depth(global.cycle_psystem, depth+1);

particle_trail = part_type_create();
part_type_shape(particle_trail,pt_shape_square);
part_type_size(particle_trail,0.10,0.10,0,0);
part_type_scale(particle_trail,1,1);
part_type_color2(particle_trail,4227327,16744576);
part_type_alpha2(particle_trail,0.50,0.50);
part_type_speed(particle_trail,7,10,0,0);
part_type_direction(particle_trail,175,185,0,0);
part_type_gravity(particle_trail,0,270);
part_type_orientation(particle_trail,175,185,0,0,1);
part_type_blend(particle_trail,1);
part_type_life(particle_trail,30,60);
emitter_trail = part_emitter_create(global.cycle_psystem);

particle_explode = part_type_create();
part_type_shape(particle_explode,pt_shape_explosion);
part_type_size(particle_explode,0.5,1.0,0,0);
part_type_scale(particle_explode,1,1);
part_type_color2(particle_explode,255,33023);
part_type_alpha1(particle_explode,1 );
part_type_speed(particle_explode,10,15,0,0);
part_type_direction(particle_explode,150,210,0,0);
part_type_gravity(particle_explode,0,270);
part_type_orientation(particle_explode,0,0,0,0,1);
part_type_blend(particle_explode,1);
part_type_life(particle_explode,60,60);
emitter_explode = part_emitter_create(global.cycle_psystem);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(0, 0, obj_gameover);

part_emitter_region(global.cycle_psystem,emitter_explode,x-55,x+sprite_get_width(spr_cycle),y-94,y-94+sprite_get_height(spr_cycle),1,1);
part_emitter_burst(global.cycle_psystem,emitter_explode,particle_explode,50);

audio_play_sound(snd_explode, 0, false);

audio_stop_sound(snd_engine_start);
audio_stop_sound(snd_engine_loop);

with (pod) {
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>invincible = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.glitch = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hit = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>can_act = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>scr_alarm_manager</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!global.pause) {
    part_system_automatic_update(global.cycle_psystem, true);
    //Player input
    if (can_act) {
        key_jump = keyboard_check_pressed(vk_space);
    }
    
    //Sound
    if (can_act) {
        if (!has_started) {
            has_started = true;
            audio_play_sound(snd_engine_start, 0, false);
        } else if (!audio_is_playing(snd_engine_start) and !audio_is_playing(snd_engine_loop)) {
            audio_play_sound(snd_engine_loop, 0, true);
        }
    }
    
    //Jump
    if (grounded and key_jump) {
        grounded = false;
        vsp = -jumpspeed;
        audio_play_sound(snd_jump, 0, false);
    } else if (jump_two and vsp &gt; 0 and key_jump) {
        jump_two = false;
        vsp = -jumpspeed/2;
        audio_play_sound(snd_jump, 0, false);
    }
    
    //Score
    if (obj_bg_manager.scroll) {
        global.dist += obj_bg_manager.scroll_speed / obj_bg_manager.scroll_base_speed;
    }
    
    //Tilt
    if (!grounded) {
        image_angle = lerp(image_angle, jump_angle, 0.1);
    } else {
        image_angle = lerp(image_angle, 0, 0.2);
    }
    
    //Gravity effect
    vsp += global.time_passed * grav;
    
    //Vertical Collision
    if (place_meeting(x,y+global.time_passed*vsp,obj_ground)) {
        grounded = true;
        jump_two = true;
        while(!place_meeting(x,y+sign(vsp),obj_ground)) {
            y += sign(vsp);
        }
        vsp = 0;
    }
    y += global.time_passed * vsp;
    
    height_diff = abs(base_height - abs(y - obj_ground.y));
    
    with (pod) {
        xhome = other.x + 200;
        yhome = other.y - 100;
    }
    
    global.player_xpos = lerp(global.player_xpos, x, 0.1);
    global.player_ypos = lerp(global.player_ypos, y, 0.1);
    
    //Particles
    if (can_act) {
        part_emitter_region(global.cycle_psystem,emitter_trail,x-5,x-5,y-sprite_get_height(spr_cycle),y+10,ps_shape_ellipse,1);
        part_emitter_burst(global.cycle_psystem,emitter_trail,particle_trail,5);
    }
    
    if (health &lt;= 0) {
        instance_destroy();
    }
} else {
    part_system_automatic_update(global.cycle_psystem, false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_chip">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.chips++;
audio_play_sound(snd_coin, 0, false);

with (other) {
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_mine">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!invincible) {
    health -= 3;
    hit = true;
}
with (other) {
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(spr_cycle_shadow, 0, x, y + 2*height_diff, 1, 1, -image_angle, c_white, 0.8);

if (hit) {
    draw_sprite_ext(spr_cycle, 1, x, y, 1, 1, image_angle, c_white, 1);
    
    if (alarm[1] &lt;= 0) {
        alarm[1] = 5;
        with (obj_camera) {
            shake = true;
        }
    }
    
    if (alarm[2] &lt;= 0) {
        global.glitch = true;
        alarm[2] = 60;
    }
} else {
    draw_sprite_ext(spr_cycle, 0, x, y, 1, 1, image_angle, c_white, 1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
